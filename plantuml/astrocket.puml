@startuml C4_Elements

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

Person(user, "User", "Uses the application via a Web Browser")
System_Ext(oauthProvider, "OAuth Provider", "External OAuth provider")
System_Ext(github, "GitHub", "External provider of Docker images")

System_Boundary(server, "Server") {
    Container(ssrApp, "SSR Application", "Server Side Rendered Application") {
        Boundary(ssg, "SSG") {
            Component(landingPage, "Landing Page", "Server Side Generated landing page")
            Component(assets, "Assets", "Server Side Generated assets")
        }
    }
    System_Boundary(pocketbase, "Pocketbase") {
        Container(api, "API", "Golang", "Handles requests from the CSR components")
        ContainerDb(db, "Database", "SQLite", "Stores application data")
    }
    System(docker, "Docker", "Pulls images for SSR application and API/Database from GitHub and performs rolling updates")
}

System_Boundary(browser, "Browser") {
    Container(csrComponents, "CSR Components", "SolidJS") {
        Boundary(csr, "CSR") {
            Component(loginComponent, "Login Component", "Client Side Rendered login component")
            Component(chatRoomComponent, "ChatRoom Component", "Client Side Rendered chat room component")
        }
    }
}



Rel(user, browser, "Uses")
Rel(browser, ssrApp, "Interacts with")
Rel(ssrApp, csrComponents, "Serves and returns to Browser")
Rel(csrComponents, api, "Interacts with")
Rel(api, db, "Uses")
Rel(api, oauthProvider, "Uses for login")

Rel(docker, github, "Pulls images from")
Rel(docker, ssrApp, "Performs rolling updates on")
Rel(docker, api, "Performs rolling updates on")

@enduml